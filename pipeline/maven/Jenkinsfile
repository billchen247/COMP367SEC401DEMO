pipeline {
    agent any

    environment {
        GIT_REPO = 'https://github.com/billchen247/spring-petclinic.git'  // Replace with your repo
        GIT_BRANCH = 'main'  // Change to the branch you want
        MAVEN_HOME = tool 'Maven'  // Ensure Maven is configured in Jenkins
        SONAR_URL = 'http://your-sonarqube-server'  // Update with your SonarQube server URL
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: "${GIT_BRANCH}", url: "${GIT_REPO}"
            }
        }

        stage('Build with Maven') {
            steps {
                sh "${MAVEN_HOME}/bin/mvn clean package"
            }
        }

        stage('Run Unit Tests') {
            steps {
                sh "${MAVEN_HOME}/bin/mvn test"
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'  // Archive test results
                }
            }
        }

        stage('Sonarqube analysis') {
            steps {
                withSonarQubeEnv(credentialsId: 'sonarqubeadmintoken', installationName: 'sonarqube') {
                    sh '${MAVEN_HOME}/bin/mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.11.0.3922:sonar'
                }
            }
        }
        stage("Quality Gate") {
            steps {
                withSonarQubeEnv(credentialsId: 'sonarqubeadmintoken', installationName: 'sonarqube') {
                    timeout(time: 10, unit: 'MINUTES') {
                        echo "The Sonarqube scan finished!"
                        script {
                            def qg = waitForQualityGate()
                            if (qg.status != 'OK') {
                                echo "The Code Quality static scan failed!"
                                error "Pipeline aborted due to quality gate failure: ${qg.status}"
                            } else {
                                echo "The Code Quality static scan passed!"
                            }
                        }
                    }
                }
            }
        }

    }   

    post {
        success {
            echo "Build, tests, and code scan completed successfully!"
        }
        failure {
            echo "Pipeline failed. Check logs for errors."
        }
    }
}
